// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.0
//   protoc               v6.30.2
// source: store.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'package.store';

export interface StoreIdRequest {
  id: string;
}

export interface StoreIdsRequest {
  ids: string[];
}

export interface StoreStatusRequest {
  status: boolean;
}

export interface StoreDto {
  id: string;
  designation: string;
  status: boolean;
  description: string;
}

export interface StoreResponse {
  store: StoreDto | undefined;
}

export interface StoreListResponse {
  stores: StoreDto[];
}

export const PACKAGE_STORE_PACKAGE_NAME = 'package.store';

export interface StoreServiceClient {
  getStoreById(request: StoreIdRequest): Observable<StoreResponse>;

  getStoresByStatus(request: StoreStatusRequest): Observable<StoreListResponse>;

  getStores(request: StoreIdsRequest): Observable<StoreListResponse>;
}

export interface StoreServiceController {
  getStoreById(
    request: StoreIdRequest,
  ): Promise<StoreResponse> | Observable<StoreResponse> | StoreResponse;

  getStoresByStatus(
    request: StoreStatusRequest,
  ):
    | Promise<StoreListResponse>
    | Observable<StoreListResponse>
    | StoreListResponse;

  getStores(
    request: StoreIdsRequest,
  ):
    | Promise<StoreListResponse>
    | Observable<StoreListResponse>
    | StoreListResponse;
}

export function StoreServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = [
      'getStoreById',
      'getStoresByStatus',
      'getStores',
    ];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('StoreService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('StoreService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const STORE_SERVICE_NAME = 'StoreService';
